globals:
  docker-config: 
    - &docker-config
      image: cimg/node:16.10.0
      auth:
        username: anthonyjhoiro
        password: $DOCKERHUB_PASSWORD
  
  setup: 
    - &install-cache
      restore_cache:
        keys:
          - npm-v1-dependencies-{{ checksum "yarn.lock" }}


version: 2.1  
jobs:
  install:
    docker:
      - *docker-config
    steps:
      - checkout
      - *install-cache
      - run: 
          name: Install deps using Yarn
          command: yarn install

      - save_cache:
          name: Save Yarn Package Cache
          key: npm-v1-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
  
  lint:
    docker:
      - *docker-config
    steps:
      - checkout
      - *install-cache
      - restore_cache:
          keys:
            - npm-v1-lint-{{ .BuildNum }}
      - run: 
          name: Check files format
          command: yarn format:check

      - run: 
          name: Lint files
          command: yarn lint

      - save_cache:
          name: Save linted files
          key: npm-v1-lint-{{ .BuildNum }}
          paths:
            - src
  test-ci:
    docker:
      - *docker-config 
    steps:
      - checkout
      - *install-cache
      - run: 
          name: Unit Tests
          command: yarn test
  test-e2e:
    docker:
      - *docker-config
      - image: circleci/postgres:9.6-alpine
        auth:
          username: anthonyjhoiro
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: psdb    
    steps:
      - checkout
      - *install-cache
      
      - run:
          name: Run e2e tests
          environment:
            DATABASE_URL: postgres://postgres:postgres@localhost:5432/psdb
          command: yarn test:e2e

  gendoc:
    docker:
      - *docker-config
    
    steps:
      - checkout
      - *install-cache
      - restore_cache:
          keys:
            - npm-v1-lint-{{ .BuildNum }}
      - run: 
          name: Generate doc
          command: yarn doc:build
      
      - store_artifacts:
          path: docs
  
  builddocker:
    docker:
      - *docker-config
    
    steps:
      - checkout
      - *install-cache
      - setup_remote_docker
      - run:
          name: Build and Push docker image
          command: |
            .circleci/build-docker.sh
          environment:
            DOCKERHUB_LOGIN: anthonyjhoiro
            DOCKERHUB_REPOSITORY: my-awesome-ci-expr



workflows:
  build-workflow:
    jobs:
      - install
      - lint:
          requires:
            - install
      - test-ci:
          requires:
            - install
      - test-e2e:
          requires:
            - install
      - gendoc:
          requires:
            - lint
            - test-ci
            - test-e2e
      - builddocker:
          filters:
            branches:
              # Run only on main branch
              only: /^main/ 
          requires:
            - lint
            - test-ci
            - test-e2e

